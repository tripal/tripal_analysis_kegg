<?php

/*******************************************************************************
 * @file
*  Implementation of hook_install();
*/
function tripal_analysis_kegg_install() {
   // create the module's data directory
   tripal_create_moddir('tripal_analysis_kegg');
   
   // We need to register to tripal_analysis module so it can provide a control
   // for our kegg result. Basically the registration is done by inserting
   // modulename into the drupal {tripal_analysis} table AND inserting required
   // information to the chado Analysis table. Also in tripal_analysis_interpro.module,
   // we need to define HOOK_get_settings() for the module to work properly.
   
   // Inert into drupal's {tripal_analysis}
   tripal_analysis_register_child('tripal_analysis_kegg');
   
   // add the cvterms needed for this module
   tripal_analysis_kegg_add_cvterms();

   // make sure the KEGG databases we will be using exist.  The list of 
   // KEGG databases can be found here: http://www.genome.jp/kegg/kegg3.html
   // we only use three: KEGG PATHWAY, KEGG BRITE AND KEGG ORTHOLOGY
   tripal_db_add_db('KEGG_PATHWAY', 'KEGG PATHWAY is a collection of manually ' .
      'drawn pathway maps representing our knowledge on the molecular interaction ' .
      'and reaction networks.',
      'http://www.genome.jp/kegg/pathway.html',
      'http://www.genome.jp/dbget-bin/www_bget?ko+');
   tripal_db_add_db('KEGG_BRITE', 'KEGG BRITE is a collection of hierarchical ' .
      'classifications from KEGG.',
      'http://www.genome.jp/kegg/brite.html',
      'http://www.genome.jp/kegg-bin/get_htext?');
   tripal_db_add_db('KEGG_ORTHOLOGY', 'The KEGG Orthology (KO) system ' .
      'consists of manually defined ortholog groups that correspond to ' .
      'pathways, BRITE hierarchys and modules',
      'http://www.genome.jp/kegg/ko.html',
      'http://www.genome.jp/dbget-bin/www_bget?ko:');
   tripal_db_add_db('KEGG_MODULE', 'KEGG MODULE is a collection of manually '. 
       'defined functional units, called KEGG modules and identified by the '.
       'M numbers, used for annotation and biological interpretation of '.
       'sequenced genomes',
       'http://www.genome.jp/kegg/module.html',
       'http://www.genome.jp/kegg-bin/show_module?');

   // add in the controlled vocabularies for the KEGG database. 
   tripal_cv_add_cv('KEGG_PATHWAY', 'Holds terms from the KEGG PATHWAY database.');
   tripal_cv_add_cv('KEGG_BRITE', 'Holds terms from the KEGG BRITE database.');
   tripal_cv_add_cv('KEGG_ORTHOLOGY', 'Holds terms from the KEGG ORTHOLOGY database.');
   tripal_cv_add_cv('KEGG_MODULE', 'Holds terms from the KEGG MODULE database.');
   
   tripal_add_mview(
      // view name
      'kegg_by_organism',
      // tripal module name
      'kegg_by_organism',
      // table name
      'kegg_by_organism',
      // table schema definition
      'analysis_name character varying(255),
       analysis_id integer,
       organism_id integer',
      // columns for indexing
      'analysis_id,organism_id',
      // SQL statement to populate the view
      "SELECT DISTINCT A.name,A.analysis_id,F.organism_id
       FROM analysisprop AP
          INNER JOIN analysis A on A.analysis_id = AP.analysis_id
          INNER JOIN cvterm CVT on CVT.cvterm_id = AP.type_id
          INNER JOIN analysisfeature AF on AF.analysis_id = A.analysis_id
          INNER JOIN feature F on F.feature_id = AF.feature_id
       WHERE CVT.name = 'analysis_kegg_settings'",
      // special index
      ''
   );
}

/*******************************************************************************
 * Provide update script for adding new cvterms
 *
 */
function tripal_analysis_kegg_update_6000() {

   // we have some new cvterms to add
   tripal_analysis_kegg_add_cvterms();

   $ret = array(
      '#finished' => 1,
   );
   
   return $ret;
}


/*******************************************************************************
 * Change the URL prefix of the 'KEGG_PATHWAY' database
*/
function tripal_analysis_kegg_update_6101() {

  // update the KEGG_PATHWAY db entry
  tripal_db_add_db('KEGG_PATHWAY', 'KEGG PATHWAY is a collection of manually ' .
      'drawn pathway maps representing our knowledge on the molecular interaction ' .
      'and reaction networks.',
      'http://www.genome.jp/kegg/pathway.html',
      'http://www.genome.jp/dbget-bin/www_bget?ko+',
      TRUE);

  $ret = array(
    '#finished' => 1,
  );
   
  return $ret;
}
/**
 * 
 */
function tripal_analysis_kegg_update_6102() {
  tripal_cv_add_cvterm(array(
      'name' => 'analysis_kegg_organism_id', 
      'def' => 'The organism ID of the organism to which KEGG analysis results belong.'), 
    'tripal', 
    0, 
    1, 
    'tripal'
  );

  $ret = array(
    '#finished' => 1,
  );
   
  return $ret;
}

/**
 * Adds the KEGG Module database and vocabulary
 */
function tripal_analysis_kegg_update_6103() {
  tripal_db_add_db('KEGG_MODULE', 'KEGG MODULE is a collection of manually '.
      'defined functional units, called KEGG modules and identified by the '.
      'M numbers, used for annotation and biological interpretation of '.
      'sequenced genomes',
      'http://www.genome.jp/kegg/module.html',
      'http://www.genome.jp/kegg-bin/show_module?');

  tripal_cv_add_cv('KEGG_MODULE', 'Holds terms from the KEGG MODULE database.');
  $ret = array(
    '#finished' => 1,
  );

  return $ret;
}
/**
 * 
 */
function tripal_analysis_kegg_add_cvterms() {
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_settings', 'def' => 'Settings of a KEGG analysis, Currently include only the heir.tar.gz file name & path.'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'kegg_brite_data', 'def' => 'This term is intended for use in the analysisfeatureprop table to store the KAAS results data.'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_query_re', 'def' => 'The regular expression for finding the feature name in the query definition line of the blast results'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_query_type', 'def' => 'The feature type (e.g. mRNA, polypeptide) of the query input file. This type is used to identify the query feature when multiple features have the same name'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_query_uniquename', 'def' => 'Indicates if the matched name in the query definition line of the blast results is feature uniquename'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_output_keywords', 'def' => 'Selected keywords for kegg html output which are indexed for search.'), 'tripal', 0, 1, 'tripal');
   tripal_cv_add_cvterm(array('name' => 'analysis_kegg_organism_id', 'def' => 'The organism ID of the organism to which KEGG analysis results belong.'), 'tripal', 0, 1, 'tripal');
}
/*******************************************************************************
* Implementation of hook_uninstall()
*/
function tripal_analysis_kegg_uninstall() {
//   tripal_delete_db('KEGG');
   tripal_analysis_unregister_child('tripal_analysis_kegg');

   $mview = tripal_mviews_get_mview_id('kegg_by_organism');
   if ($mview) {
      tripal_mviews_action('delete', $mview);
   }
}

/*******************************************************************************
 * Implementation of hook_requirements(). Make sure 'Tripal Core' and 'Tripal
 * Analysis' are enabled before installation
 */
function tripal_analysis_kegg_requirements($phase) {
   $requirements = array();
   if ($phase == 'install') {
      if (!function_exists('tripal_create_moddir') || !function_exists('tripal_analysis_register_child')) {
         $requirements ['tripal_analysis_kegg'] = array(
            'title' => "tripal_analysis_kegg",
            'value' => "Installation Error. Some required modules are not installed. Please install missing modules and try again.",
            'severity' => REQUIREMENT_ERROR,
         );
      }
   }
   return $requirements;
}
